using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using DevExpress.XtraGrid.Views.Grid;
using SalesManagmentSystem2.DAL.Models;
using SalesManagmentSystem2.DAL.DbInventory;

namespace SalesManagmentSystem2.Player
{

    public partial class Frm_Supplier : Form
    {
        GridView grid;
        private Supplier selectedSupplier=null;
        //private int selectedRow_index=-1;
        InventoryDB dbContext = new InventoryDB();
        MessageDialog messageDialog = new MessageDialog();
        bool flag = false;
        public Frm_Supplier()
        {

            InitializeComponent();
            grid = (this.gridControl1.MainView as GridView);

          
            grid.FocusedRowChanged += (sender, e) => selectedSupplier = ((Supplier)grid.GetFocusedRow());
            //SettingLoading();

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            SalesManagmentSystem2.DAL.DbInventory.InventoryDB dbContext = new SalesManagmentSystem2.DAL.DbInventory.InventoryDB();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.Suppliers.Load();
            // This line of code is generated by Data Source Configuration Wizard
            suppliersBindingSource.DataSource = dbContext.Suppliers.Local.ToBindingList();
        }


        private void Table_Supplier_SelectionChanged(object sender, EventArgs e)
        {

        }

        //private void Table_Supplier_CellClick(object sender, DataGridViewCellEventArgs e)
        //{
        //    selectedRow_index =int.Parse(Table_Supplier.Rows[e.RowIndex].Cells[0].Value.ToString());
        //    name_client.Text = Table_Supplier.Rows[e.RowIndex].Cells[1].Value.ToString();
        //    address_client.Text = Table_Supplier.Rows[e.RowIndex].Cells[2].Value.ToString();
        //    phone_client.Text = Table_Supplier.Rows[e.RowIndex].Cells[3].Value.ToString();
        //    email_client.Text = Table_Supplier.Rows[e.RowIndex].Cells[4].Value.ToString();
        //}

        //private void btn_delete_supp_Click(object sender, EventArgs e)
        //{
        //    messageDialog.Message = "هل انت متاكد ان تريد مسح هذا العميل";
        //    if (selectedRow_index >= 0)
        //    {
        //        if (messageDialog.ShowDialog() == DialogResult.Yes)
        //        {
        //            Supplier supplier = dbContext.Suppliers.Where(sup => sup.ID == selectedRow_index).FirstOrDefault();
        //            if (supplier != null)
        //            {
        //                dbContext.Entry(supplier).State = EntityState.Deleted;
        //                dbContext.SaveChanges();
        //            }
        //        }
        //        resetFormSupp();
        //    }
        //}

        private void btn_delete_supp_Click(object sender, EventArgs e)
        {
            messageDialog.Message = "هل انت متاكد ان تريد مسح هذا العميل";
            if (selectedSupplier !=null)
            {
                if (messageDialog.ShowDialog() == DialogResult.Yes)
                {
                        dbContext.Entry(selectedSupplier).State = EntityState.Deleted;
                        dbContext.SaveChanges();
                }
                resetFormSupp();
            }
        }

        private void btn_add_supp_Click(object sender, EventArgs e)
        {
            if (!flag)
            {
                Supplier supplier = new Supplier();
                supplier.SuppName = name_client.Text;
                supplier.SuppAddress = address_client.Text;
                supplier.SuppPhone = phone_client.Text;
                supplier.SuppMail = email_client.Text;
                dbContext.Suppliers.Add(supplier);
                dbContext.SaveChanges();
                resetFormSupp();
            }
        }


        private void btn_edit_supp_Click(object sender, EventArgs e)
        {
            if (selectedSupplier != null)
            {

                if (!flag)
                {
                    fillFormSupp(selectedSupplier);
                    btn_edit_supp.Text = "حفظ التعديلات";
                    flag = true;
                }
                else if (flag)
                {
                    messageDialog.Message = "هل انت متاكد انك تريد تعديل بيانات هذا العميل";
                    if (messageDialog.ShowDialog() == DialogResult.Yes)
                    {
                        Supplier supplier = dbContext.Suppliers.Where(supp => supp.ID == selectedSupplier.ID).FirstOrDefault();
                        supplier.SuppName = name_client.Text;
                        supplier.SuppAddress = address_client.Text;
                        supplier.SuppPhone = phone_client.Text;
                        supplier.SuppMail = email_client.Text;
                        dbContext.Entry(supplier).State = EntityState.Modified;
                        dbContext.SaveChanges();
                    }
                    resetFormSupp();
                    btn_edit_supp.Text = "تعديل";
                }
            }
        }

        private void refresh_supp_Click(object sender, EventArgs e)
        {
            // Table_Supplier.DataSource = dbContext.Suppliers.ToList();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.Suppliers.Load();
            // This line of code is generated by Data Source Configuration Wizard
            suppliersBindingSource.DataSource = dbContext.Suppliers.Local.ToBindingList();
        }


        /// <summary>
        ///             Setting for Form and Validation 
        /// </summary>
        /// <param name="supplier"></param>
        /// <returns></returns>

        private bool ValidationSupplier(out Supplier supplier)
        {
            //name_client.Tex
            supplier = new Supplier();
            return true;
        }


        //private void SettingLoading()
        //{
        //    this.Table_Supplier.Columns["ID"].Visible = false;
        //    this.Table_Supplier.Columns["BuyProcesses"].Visible = false;
        //    this.Table_Supplier.Columns[0].HeaderText = "اسم العميل";
        //}
        private void fillFormSupp(Supplier supplier)
        {
            name_client.Text = supplier.SuppName;
            phone_client.Text = supplier.SuppPhone;
            email_client.Text = supplier.SuppMail;
            address_client.Text = supplier.SuppAddress;
        }
        private void resetFormSupp()
        {
            name_client.Text = "";
            phone_client.Text = "";
            email_client.Text = "";
            address_client.Text = "";
            flag = false;
        }

        private void gridControl1_Click(object sender, EventArgs e)
        {

        }
    }
}
